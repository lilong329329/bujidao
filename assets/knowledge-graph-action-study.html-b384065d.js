import{_ as p,W as t,X as o,Z as n,$ as s,a0 as e,Y as l,D as c}from"./framework-4b7e9ff4.js";const i={},r=n("h1",{id:"图谱实战-电影知识图谱的智能问答系统-项目学习笔记",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#图谱实战-电影知识图谱的智能问答系统-项目学习笔记","aria-hidden":"true"},"#"),s(" 图谱实战 - 电影知识图谱的智能问答系统-项目学习笔记")],-1),d=n("h2",{id:"_0-原始项目地址",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0-原始项目地址","aria-hidden":"true"},"#"),s(" 0. 原始项目地址")],-1),u={href:"https://blog.csdn.net/appleyk/article/details/80331997",target:"_blank",rel:"noopener noreferrer"},k={href:"https://github.com/kobeyk/Spring-Boot-Neo4j-Movies.git",target:"_blank",rel:"noopener noreferrer"},v={href:"https://hub.docker.com/r/appleyk/neo4j-movies",target:"_blank",rel:"noopener noreferrer"},m={href:"https://hub.docker.com/r/appleyk/tomcat8-movies",target:"_blank",rel:"noopener noreferrer"},g=l(`<h2 id="_1-如何体现搜索智能" tabindex="-1"><a class="header-anchor" href="#_1-如何体现搜索智能" aria-hidden="true">#</a> 1. 如何体现搜索智能</h2><p>智能主要体现对问题的归纳分类、<strong>映射到现有问题</strong>中。</p><blockquote><p>同一个问题的问法千千万，如何映射到我们的问题库中？这就是智能的体现</p></blockquote><ol><li>抽象句子，利用HanPL分词，将关键字进行词性抽象</li><li>将抽象的句子与Spark训练集中的模板进行匹配，拿到句子对应的模板</li><li>模板还原成句子，此时问题已转换为我们熟悉的操</li></ol><h2 id="_2-neo4j-和sql语法对比" tabindex="-1"><a class="header-anchor" href="#_2-neo4j-和sql语法对比" aria-hidden="true">#</a> 2. Neo4j 和sql语法对比</h2><h3 id="_2-0-查询电影的评分" tabindex="-1"><a class="header-anchor" href="#_2-0-查询电影的评分" aria-hidden="true">#</a> 2.0 查询电影的评分</h3><p><strong>neo4j</strong></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">match</span><span class="token punctuation">(</span>n:Movie<span class="token punctuation">)</span> <span class="token keyword">where</span> n<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">&#39;功夫&#39;</span> <span class="token keyword">return</span> n<span class="token punctuation">.</span>rating
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>sql</strong></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> movie_rating
<span class="token keyword">from</span> movie
<span class="token keyword">where</span> movie_title <span class="token operator">=</span> <span class="token string">&#39;功夫&#39;</span>
<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-1-查询电影上映时间" tabindex="-1"><a class="header-anchor" href="#_2-1-查询电影上映时间" aria-hidden="true">#</a> 2.1 查询电影上映时间</h3><p>neo4j</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">match</span><span class="token punctuation">(</span>n:Movie<span class="token punctuation">)</span> <span class="token keyword">where</span> n<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">&#39;功夫&#39;</span> <span class="token keyword">return</span> n<span class="token punctuation">.</span>releasedate
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>sql</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> movie_release_date
<span class="token keyword">from</span> movie
<span class="token keyword">where</span> movie_title <span class="token operator">=</span> <span class="token string">&#39;功夫&#39;</span>
<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-查询电影的类型-风格" tabindex="-1"><a class="header-anchor" href="#_2-2-查询电影的类型-风格" aria-hidden="true">#</a> 2.2 查询电影的类型/风格</h3><p>neo4j</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">match</span><span class="token punctuation">(</span>n:Movie<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">[</span>r:<span class="token operator">is</span><span class="token punctuation">]</span> <span class="token operator">-</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>g:Genre<span class="token punctuation">)</span> <span class="token keyword">where</span> n<span class="token punctuation">.</span>title<span class="token operator">=</span><span class="token string">&#39;功夫&#39;</span> <span class="token keyword">return</span> g<span class="token punctuation">.</span>name
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>sql</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> g<span class="token punctuation">.</span>genre_name
<span class="token keyword">from</span> movie m
<span class="token keyword">left</span> <span class="token keyword">join</span> movie_to_genre mg <span class="token keyword">on</span> m<span class="token punctuation">.</span>movie_id <span class="token operator">=</span> mg<span class="token punctuation">.</span>movie_id
<span class="token keyword">left</span> <span class="token keyword">join</span> genre g <span class="token keyword">on</span> mg<span class="token punctuation">.</span>genre_id <span class="token operator">=</span> g<span class="token punctuation">.</span>genre_id
<span class="token keyword">where</span> movie_title <span class="token operator">=</span> <span class="token string">&#39;功夫&#39;</span>
<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-查询电影简介" tabindex="-1"><a class="header-anchor" href="#_2-3-查询电影简介" aria-hidden="true">#</a> 2.3 查询电影简介</h3><p>neo4j</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">match</span><span class="token punctuation">(</span>n:Movie<span class="token punctuation">)</span> <span class="token keyword">where</span> n<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">&#39;功夫&#39;</span> <span class="token keyword">return</span> n<span class="token punctuation">.</span>introduction
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>sql</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> movie_introduction
<span class="token keyword">from</span> movie
<span class="token keyword">where</span> movie_title <span class="token operator">=</span> <span class="token string">&#39;功夫&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-4-查询电影有哪些演员出演" tabindex="-1"><a class="header-anchor" href="#_2-4-查询电影有哪些演员出演" aria-hidden="true">#</a> 2.4 查询电影有哪些演员出演</h3><p>neo4j</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">match</span><span class="token punctuation">(</span>n:Person<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">[</span>r:actedin<span class="token punctuation">]</span> <span class="token operator">-</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>m:Movie<span class="token punctuation">)</span> <span class="token keyword">where</span> m<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">&#39;功夫&#39;</span> <span class="token keyword">return</span> n<span class="token punctuation">.</span>name
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>sql</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> p<span class="token punctuation">.</span>person_name<span class="token punctuation">,</span>p<span class="token punctuation">.</span>person_english_name
<span class="token keyword">from</span> person p
<span class="token keyword">left</span> <span class="token keyword">join</span> person_to_movie ptm <span class="token keyword">on</span> p<span class="token punctuation">.</span>person_id <span class="token operator">=</span> ptm<span class="token punctuation">.</span>person_id
<span class="token keyword">left</span> <span class="token keyword">join</span> movie m <span class="token keyword">on</span> m<span class="token punctuation">.</span>movie_id <span class="token operator">=</span> ptm<span class="token punctuation">.</span>movie_id
<span class="token keyword">where</span> m<span class="token punctuation">.</span>movie_title <span class="token operator">=</span> <span class="token string">&#39;功夫&#39;</span>
<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-5-查询演员简介" tabindex="-1"><a class="header-anchor" href="#_2-5-查询演员简介" aria-hidden="true">#</a> 2.5 查询演员简介</h3><p>neo4j</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">match</span><span class="token punctuation">(</span>n:Person<span class="token punctuation">)</span> <span class="token keyword">where</span> n<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;周星驰&#39;</span> <span class="token keyword">return</span> n<span class="token punctuation">.</span>biography
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>sql</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> person_biography
<span class="token keyword">from</span> person
<span class="token keyword">where</span> person_name <span class="token operator">=</span> <span class="token string">&#39;周星驰&#39;</span>
<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-6-某演员出演过的某类型的电影有哪些" tabindex="-1"><a class="header-anchor" href="#_2-6-某演员出演过的某类型的电影有哪些" aria-hidden="true">#</a> 2.6 某演员出演过的某类型的电影有哪些</h3><p>neo4j</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">match</span><span class="token punctuation">(</span>n:Person<span class="token punctuation">)</span><span class="token operator">-</span><span class="token punctuation">[</span>r:actedin<span class="token punctuation">]</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>m:Movie<span class="token punctuation">)</span><span class="token operator">-</span><span class="token punctuation">[</span>i:<span class="token operator">is</span><span class="token punctuation">]</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>g:Genre<span class="token punctuation">)</span> <span class="token keyword">where</span> n<span class="token punctuation">.</span>name<span class="token operator">=</span><span class="token string">&#39;周星驰&#39;</span> <span class="token operator">and</span> g<span class="token punctuation">.</span>name<span class="token operator">=</span><span class="token string">&#39;动作&#39;</span>   <span class="token keyword">return</span> <span class="token keyword">distinct</span> m<span class="token punctuation">.</span>title
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>sql</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> m<span class="token punctuation">.</span>movie_title
<span class="token keyword">from</span> movie m
<span class="token keyword">left</span> <span class="token keyword">join</span> movie_to_genre mg <span class="token keyword">on</span> m<span class="token punctuation">.</span>movie_id <span class="token operator">=</span> mg<span class="token punctuation">.</span>movie_id
<span class="token keyword">left</span> <span class="token keyword">join</span> genre g <span class="token keyword">on</span> mg<span class="token punctuation">.</span>genre_id <span class="token operator">=</span> g<span class="token punctuation">.</span>genre_id
<span class="token keyword">left</span> <span class="token keyword">join</span> person_to_movie ptm <span class="token keyword">on</span> m<span class="token punctuation">.</span>movie_id <span class="token operator">=</span> ptm<span class="token punctuation">.</span>movie_id
<span class="token keyword">left</span> <span class="token keyword">join</span> person p <span class="token keyword">on</span> ptm<span class="token punctuation">.</span>person_id <span class="token operator">=</span> p<span class="token punctuation">.</span>person_id
<span class="token keyword">where</span> p<span class="token punctuation">.</span>person_name <span class="token operator">=</span> <span class="token string">&#39;周星驰&#39;</span>
<span class="token operator">and</span> g<span class="token punctuation">.</span>genre_name <span class="token operator">=</span> <span class="token string">&#39;动作&#39;</span>
<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-7-某演员演了什么电影" tabindex="-1"><a class="header-anchor" href="#_2-7-某演员演了什么电影" aria-hidden="true">#</a> 2.7 某演员演了什么电影</h3><p><strong>neo4j</strong></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">match</span> <span class="token punctuation">(</span>n:Person<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">[</span>r:actedin<span class="token punctuation">]</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token punctuation">(</span>m:Movie<span class="token punctuation">)</span> <span class="token keyword">where</span> n<span class="token punctuation">.</span>name<span class="token operator">=</span><span class="token string">&#39;周星驰&#39;</span> <span class="token keyword">return</span> m<span class="token punctuation">.</span>title
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>sql</strong></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token keyword">distinct</span> <span class="token punctuation">(</span>m<span class="token punctuation">.</span>movie_title<span class="token punctuation">)</span>
<span class="token keyword">FROM</span> movie m
         <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> person_to_movie pm <span class="token keyword">on</span> m<span class="token punctuation">.</span>movie_id <span class="token operator">=</span> pm<span class="token punctuation">.</span>movie_id
<span class="token keyword">left</span> <span class="token keyword">join</span> person p <span class="token keyword">on</span> pm<span class="token punctuation">.</span>person_id <span class="token operator">=</span> p<span class="token punctuation">.</span>person_id
<span class="token keyword">where</span> p<span class="token punctuation">.</span>person_name <span class="token operator">=</span> <span class="token string">&#39;周星驰&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-8-查询某演员参演的大于n评分电影" tabindex="-1"><a class="header-anchor" href="#_2-8-查询某演员参演的大于n评分电影" aria-hidden="true">#</a> 2.8 查询某演员参演的大于n评分电影</h3><p>neo4j</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">match</span><span class="token punctuation">(</span>n:Person<span class="token punctuation">)</span><span class="token operator">-</span><span class="token punctuation">[</span>r:actedin<span class="token punctuation">]</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>m:Movie<span class="token punctuation">)</span> <span class="token keyword">where</span> n<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;周星驰&#39;</span> <span class="token operator">and</span>  m<span class="token punctuation">.</span>rating<span class="token operator">&gt;</span><span class="token number">7</span>   <span class="token keyword">return</span> <span class="token keyword">distinct</span> m<span class="token punctuation">.</span>title
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>sql</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> m<span class="token punctuation">.</span>movie_title<span class="token punctuation">,</span>m<span class="token punctuation">.</span>movie_rating
<span class="token keyword">from</span> movie m
<span class="token keyword">left</span> <span class="token keyword">join</span> person_to_movie ptm <span class="token keyword">on</span> m<span class="token punctuation">.</span>movie_id <span class="token operator">=</span> ptm<span class="token punctuation">.</span>movie_id
<span class="token keyword">left</span> <span class="token keyword">join</span> person p <span class="token keyword">on</span> ptm<span class="token punctuation">.</span>person_id <span class="token operator">=</span> p<span class="token punctuation">.</span>person_id
<span class="token keyword">where</span> m<span class="token punctuation">.</span>movie_rating<span class="token operator">&gt;</span><span class="token number">7</span>
<span class="token operator">and</span> p<span class="token punctuation">.</span>person_name <span class="token operator">=</span> <span class="token string">&#39;周星驰&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-9-查询某演员参演的小于n评分电影" tabindex="-1"><a class="header-anchor" href="#_2-9-查询某演员参演的小于n评分电影" aria-hidden="true">#</a> 2.9 查询某演员参演的小于n评分电影</h3><p>同上</p><h3 id="_2-10-某演员出演过的类型电影有哪些" tabindex="-1"><a class="header-anchor" href="#_2-10-某演员出演过的类型电影有哪些" aria-hidden="true">#</a> 2.10 某演员出演过的类型电影有哪些</h3><p>neo4j</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">match</span><span class="token punctuation">(</span>n:Person<span class="token punctuation">)</span><span class="token operator">-</span><span class="token punctuation">[</span>r:actedin<span class="token punctuation">]</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>m:Movie<span class="token punctuation">)</span><span class="token operator">-</span><span class="token punctuation">[</span>i:<span class="token operator">is</span><span class="token punctuation">]</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>g:Genre<span class="token punctuation">)</span> <span class="token keyword">where</span> n<span class="token punctuation">.</span>name<span class="token operator">=</span><span class="token string">&#39;周星驰&#39;</span> <span class="token keyword">return</span> <span class="token keyword">distinct</span> g<span class="token punctuation">.</span>name
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>sql</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token keyword">distinct</span> g<span class="token punctuation">.</span>genre_name
<span class="token keyword">from</span> genre g
<span class="token keyword">left</span> <span class="token keyword">join</span> movie_to_genre mtg <span class="token keyword">on</span> g<span class="token punctuation">.</span>genre_id <span class="token operator">=</span> mtg<span class="token punctuation">.</span>genre_id
<span class="token keyword">left</span> <span class="token keyword">join</span> person_to_movie ptm <span class="token keyword">on</span> mtg<span class="token punctuation">.</span>movie_id <span class="token operator">=</span> ptm<span class="token punctuation">.</span>movie_id
<span class="token keyword">left</span> <span class="token keyword">join</span> person p <span class="token keyword">on</span> ptm<span class="token punctuation">.</span>person_id <span class="token operator">=</span> p<span class="token punctuation">.</span>person_id
<span class="token keyword">where</span> person_name<span class="token operator">=</span> <span class="token string">&#39;周星驰&#39;</span>
<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-11-演员a和演员b合作了哪些电影" tabindex="-1"><a class="header-anchor" href="#_2-11-演员a和演员b合作了哪些电影" aria-hidden="true">#</a> 2.11 演员A和演员B合作了哪些电影</h3><p>neo4j</p><p>TODO 大无语的实现</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token doc-comment comment">/**1 2 3 4 nnt nnr 合作 电影列表 == 演员A和演员B合作的电影有哪些*/</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token function">getActorMovies</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> reStrings<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> name<span class="token punctuation">;</span>
        <span class="token class-name">String</span> answer<span class="token punctuation">;</span>
        name <span class="token operator">=</span> reStrings<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> actorMoviesA <span class="token operator">=</span> questionRepository<span class="token punctuation">.</span><span class="token function">getActorMovies</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token doc-comment comment">/**如果演员A的电影作品无，那么A和演员B无合作之谈*/</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>actorMoviesA<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            answer <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> answer<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        name <span class="token operator">=</span> reStrings<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> actorMoviesB <span class="token operator">=</span> questionRepository<span class="token punctuation">.</span><span class="token function">getActorMovies</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token doc-comment comment">/**如果演员B的电影作品无，那么B和演员A无合作之谈*/</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>actorMoviesB<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            answer <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> answer<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token doc-comment comment">/** A的作品与B的作品求交集*/</span>
        actorMoviesA<span class="token punctuation">.</span><span class="token function">retainAll</span><span class="token punctuation">(</span>actorMoviesB<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>actorMoviesA<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            answer <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            answer <span class="token operator">=</span> actorMoviesA<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;[&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;]&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> answer<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>sql</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span>
<span class="token keyword">from</span> movie
<span class="token keyword">left</span> <span class="token keyword">join</span> person_to_movie ptm <span class="token keyword">on</span> movie<span class="token punctuation">.</span>movie_id <span class="token operator">=</span> ptm<span class="token punctuation">.</span>movie_id
<span class="token keyword">left</span> <span class="token keyword">join</span> person p <span class="token keyword">on</span> ptm<span class="token punctuation">.</span>person_id <span class="token operator">=</span> p<span class="token punctuation">.</span>person_id
<span class="token keyword">left</span> <span class="token keyword">join</span> person_to_movie ptm1 <span class="token keyword">on</span> movie<span class="token punctuation">.</span>movie_id <span class="token operator">=</span> ptm1<span class="token punctuation">.</span>movie_id
<span class="token keyword">left</span> <span class="token keyword">join</span> person p1 <span class="token keyword">on</span> ptm1<span class="token punctuation">.</span>person_id <span class="token operator">=</span> p1<span class="token punctuation">.</span>person_id
<span class="token keyword">where</span> p<span class="token punctuation">.</span>person_name <span class="token operator">=</span> <span class="token string">&#39;周星驰&#39;</span> <span class="token operator">and</span> p1<span class="token punctuation">.</span>person_name<span class="token operator">=</span><span class="token string">&#39;成龙&#39;</span>
<span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-12-查询演员演过多少部电影" tabindex="-1"><a class="header-anchor" href="#_2-12-查询演员演过多少部电影" aria-hidden="true">#</a> 2.12 查询演员演过多少部电影</h3><p>neo4j</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">match</span><span class="token punctuation">(</span>n:Person<span class="token punctuation">)</span><span class="token operator">-</span><span class="token punctuation">[</span>r:actedin<span class="token punctuation">]</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>m:Movie<span class="token punctuation">)</span> <span class="token keyword">where</span> n<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;周星驰&#39;</span>  <span class="token keyword">return</span> <span class="token function">count</span><span class="token punctuation">(</span>m<span class="token punctuation">.</span>title<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>sql</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token keyword">from</span> movie
         <span class="token keyword">left</span> <span class="token keyword">join</span> person_to_movie ptm <span class="token keyword">on</span> movie<span class="token punctuation">.</span>movie_id <span class="token operator">=</span> ptm<span class="token punctuation">.</span>movie_id
         <span class="token keyword">left</span> <span class="token keyword">join</span> person p <span class="token keyword">on</span> ptm<span class="token punctuation">.</span>person_id <span class="token operator">=</span> p<span class="token punctuation">.</span>person_id
<span class="token keyword">where</span>  person_name <span class="token operator">=</span> <span class="token string">&#39;周星驰&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-13-演员出生日期" tabindex="-1"><a class="header-anchor" href="#_2-13-演员出生日期" aria-hidden="true">#</a> 2.13 演员出生日期</h3><p>neo4j</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">match</span><span class="token punctuation">(</span>n:Person<span class="token punctuation">)</span> <span class="token keyword">where</span> n<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;周星驰&#39;</span> <span class="token keyword">return</span> n<span class="token punctuation">.</span>birth
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>sql</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> person_birth_day
<span class="token keyword">from</span> person
<span class="token keyword">where</span> person_name <span class="token operator">=</span> <span class="token string">&#39;周星驰&#39;</span>
<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a></h2><h2 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章" aria-hidden="true">#</a> 参考文章</h2>`,75),h={href:"https://www.showmeai.tech/article-detail/94",target:"_blank",rel:"noopener noreferrer"};function b(w,y){const a=c("ExternalLinkIcon");return t(),o("div",null,[r,d,n("ul",null,[n("li",null,[n("p",null,[s("原始项目博文："),n("a",u,[s("基于电影知识图谱的智能问答系统"),e(a)])])]),n("li",null,[n("p",null,[s("原始项目git:"),n("a",k,[s("源码地址"),e(a)])])]),n("li",null,[n("p",null,[s("带数据的neo4j数据库镜像："),n("a",v,[s("https://hub.docker.com/r/appleyk/neo4j-movies"),e(a)])])]),n("li",null,[n("p",null,[s("带hanlp字典数据及训练样本数据和应用程序的tomcat镜像："),n("a",m,[s("https://hub.docker.com/r/appleyk/tomcat8-movies"),e(a)])])])]),g,n("p",null,[n("a",h,[s("大厂技术实现 | 详解知识图谱的构建全流程"),e(a)])])])}const q=p(i,[["render",b],["__file","knowledge-graph-action-study.html.vue"]]);export{q as default};
