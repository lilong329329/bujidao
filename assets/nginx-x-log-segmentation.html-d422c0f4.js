import{_ as s,W as e,X as t,Z as a,$ as o,a0 as p,Y as l,D as i}from"./framework-4b7e9ff4.js";const c={},r=l(`<h1 id="nginx-日志分割-定期删除日志" tabindex="-1"><a class="header-anchor" href="#nginx-日志分割-定期删除日志" aria-hidden="true">#</a> Nginx - 日志分割&amp;定期删除日志</h1><h2 id="_1-简介" tabindex="-1"><a class="header-anchor" href="#_1-简介" aria-hidden="true">#</a> 1. 简介</h2><p>nginx会按照nginx.conf的配置生成access.log和error.log，随着访问量的增长，日志文件会越来越大，既会影响访问的速度(写入日志时间延长)，也会增加查找日志的难度，nginx没有这种按天或更细粒度生成日志的机制。</p><h2 id="_2-日志分割" tabindex="-1"><a class="header-anchor" href="#_2-日志分割" aria-hidden="true">#</a> 2. 日志分割</h2><p>在http模块下</p><div class="language-nginx line-numbers-mode" data-ext="nginx"><pre class="language-nginx"><code><span class="token directive"><span class="token keyword">log_format</span> main <span class="token string">&#39;<span class="token variable">$remote_addr</span> - <span class="token variable">$remote_user</span> [<span class="token variable">$time_local]</span> &quot;<span class="token variable">$request</span>&quot; &#39;</span>
<span class="token string">&#39;<span class="token variable">$status</span> <span class="token variable">$body_bytes_sent</span> &quot;<span class="token variable">$http_referer</span>&quot; &#39;</span>
<span class="token string">&#39;&quot;<span class="token variable">$http_user_agent</span>&quot; &quot;<span class="token variable">$http_x_forwarded_for</span>&quot;&#39;</span></span><span class="token punctuation">;</span>
 
<span class="token directive"><span class="token keyword">map</span> <span class="token variable">$time_iso8601</span> <span class="token variable">$logdate</span></span> <span class="token punctuation">{</span>
&#39;~^(?&lt;ymd&gt;\\d<span class="token punctuation">{</span>4<span class="token punctuation">}</span>-\\d<span class="token punctuation">{</span>2<span class="token punctuation">}</span>-\\d<span class="token punctuation">{</span>2<span class="token punctuation">}</span>)&#39; $ymd<span class="token punctuation">;</span>
<span class="token directive"><span class="token keyword">default</span> <span class="token string">&#39;date-not-found&#39;</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
 
<span class="token directive"><span class="token keyword">access_log</span> logs/access-<span class="token variable">$logdate</span>.log main</span><span class="token punctuation">;</span>
<span class="token directive"><span class="token keyword">open_log_file_cache</span> max=10</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>但是缺点：<em><strong>*每次请求都会进行map的正则表达式匹配，对性能有影响。*</strong></em></p><h2 id="_3-定期删除日志" tabindex="-1"><a class="header-anchor" href="#_3-定期删除日志" aria-hidden="true">#</a> 3. 定期删除日志</h2><h3 id="_3-1-新建sh-删除5天前的" tabindex="-1"><a class="header-anchor" href="#_3-1-新建sh-删除5天前的" aria-hidden="true">#</a> 3.1 新建sh,删除5天前的</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@app2 sh<span class="token punctuation">]</span><span class="token comment"># pwd</span>
/usr/local/nginx/sh
<span class="token punctuation">[</span>root@app2 sh<span class="token punctuation">]</span><span class="token comment"># vi delete_nginx_logs.sh </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>添加内容</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#set the path to nginx log files</span>
<span class="token assign-left variable">log_files_path</span><span class="token operator">=</span><span class="token string">&quot;/usr/local/nginx/logs/&quot;</span>
<span class="token assign-left variable">save_days</span><span class="token operator">=</span><span class="token number">5</span>
<span class="token comment">#delete ? days ago nginx log files</span>
<span class="token function">find</span> <span class="token variable">$log_files_path</span> <span class="token parameter variable">-mtime</span> +<span class="token variable">$save_days</span> <span class="token parameter variable">-exec</span> <span class="token function">rm</span> <span class="token parameter variable">-rf</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">\\</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-添加定时任务" tabindex="-1"><a class="header-anchor" href="#_3-2-添加定时任务" aria-hidden="true">#</a> 3.2 添加定时任务</h3><div class="language-perl line-numbers-mode" data-ext="perl"><pre class="language-perl"><code><span class="token punctuation">[</span>root<span class="token variable">@localhost</span> sh<span class="token punctuation">]</span><span class="token comment"># crontab -e</span>
<span class="token number">00</span> <span class="token number">00</span> <span class="token operator">*</span> <span class="token operator">*</span> <span class="token operator">*</span> <span class="token operator">/</span>bin<span class="token operator">/</span>sh  <span class="token operator">/</span>usr<span class="token regex">/local/ngin</span><span class="token operator">x</span><span class="token operator">/</span>sh<span class="token operator">/</span>delete_nginx_logs<span class="token operator">.</span>sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章" aria-hidden="true">#</a> 参考文章</h2>`,15),d={href:"https://juejin.cn/post/6844904144235413512",target:"_blank",rel:"noopener noreferrer"};function u(k,v){const n=i("ExternalLinkIcon");return e(),t("div",null,[r,a("p",null,[a("a",d,[o("Nginx 从入门到实践，万字详解"),p(n)])])])}const m=s(c,[["render",u],["__file","nginx-x-log-segmentation.html.vue"]]);export{m as default};
