const e=JSON.parse('{"key":"v-3b1d862f","path":"/dependencies/spring/spring-y-aop-impl.html","title":"Spring AOP实现原理","lang":"zh-CN","frontmatter":{"description":"1. 代理模式 代理模式UML 类图如下 image-20191011005747639\\r类图中虚线箭头表示接口实现\\r菱形和箭头表示组合\\r具体参考uml类图 (cs/uml/README.md) 代理类实现了被代理类的接口，同时与被代理类是组合关系。下面看一下代理模式的实现 2. 静态代理 接口类： ``` interface Person { voi...","head":[["meta",{"property":"og:url","content":"https://zszdevelop.github.io/java-study-gitbook/dependencies/spring/spring-y-aop-impl.html"}],["meta",{"property":"og:site_name","content":"布吉岛的知识笔记"}],["meta",{"property":"og:title","content":"Spring AOP实现原理"}],["meta",{"property":"og:description","content":"1. 代理模式 代理模式UML 类图如下 image-20191011005747639\\r类图中虚线箭头表示接口实现\\r菱形和箭头表示组合\\r具体参考uml类图 (cs/uml/README.md) 代理类实现了被代理类的接口，同时与被代理类是组合关系。下面看一下代理模式的实现 2. 静态代理 接口类： ``` interface Person { voi..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-02-20T13:42:31.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2023-02-20T13:42:31.000Z"}]]},"headers":[{"level":2,"title":"1. 代理模式","slug":"_1-代理模式","link":"#_1-代理模式","children":[]},{"level":2,"title":"2. 静态代理","slug":"_2-静态代理","link":"#_2-静态代理","children":[]},{"level":2,"title":"3.动态代理","slug":"_3-动态代理","link":"#_3-动态代理","children":[{"level":3,"title":"3.1 JDK自带方法","slug":"_3-1-jdk自带方法","link":"#_3-1-jdk自带方法","children":[]},{"level":3,"title":"3.2 CGLIB 库的方法","slug":"_3-2-cglib-库的方法","link":"#_3-2-cglib-库的方法","children":[]},{"level":3,"title":"参考文章","slug":"参考文章","link":"#参考文章","children":[]}]}],"git":{"createdTime":1676900551000,"updatedTime":1676900551000,"contributors":[{"name":"zszdevelop","email":"zszdevelop@163.com","commits":1}]},"readingTime":{"minutes":3.57,"words":1072},"filePathRelative":"dependencies/spring/spring-y-aop-impl.md","localizedDate":"2023年2月20日","autoDesc":true}');export{e as data};
