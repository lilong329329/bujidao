import{_ as o,W as t,X as i,Z as e,$ as n,a0 as a,Y as l,D as r}from"./framework-4b7e9ff4.js";const d={},p=l(`<h1 id="mysql-慢日志" tabindex="-1"><a class="header-anchor" href="#mysql-慢日志" aria-hidden="true">#</a> MySQL - 慢日志</h1><h2 id="_1-简介" tabindex="-1"><a class="header-anchor" href="#_1-简介" aria-hidden="true">#</a> 1. 简介</h2><p>慢日志全称为慢查询日志（Slow Query Log），主要用来记录在 MySQL 中执行时间超过指定时间的 SQL 语句。通过慢查询日志，可以查找出哪些语句的执行效率低，以便进行优化。</p><blockquote><p>开启慢查询日志是有代价的（跟 bin log、optimizer-trace 一样），所以它默认是关闭的</p></blockquote><h3 id="_1-1-获取慢日志开启状态" tabindex="-1"><a class="header-anchor" href="#_1-1-获取慢日志开启状态" aria-hidden="true">#</a> 1.1 获取慢日志开启状态</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>show variables like &#39;slow_query%&#39;;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20230515094425495.png" alt="image-20230515094425495" tabindex="0" loading="lazy"><figcaption>image-20230515094425495</figcaption></figure><h3 id="_1-2-查询慢日志超时配置" tabindex="-1"><a class="header-anchor" href="#_1-2-查询慢日志超时配置" aria-hidden="true">#</a> 1.2 查询慢日志超时配置</h3><p>SQL 才记录到慢日志，默认是 10 秒</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>show variables like &#39;%long_query%&#39;;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_2-慢日志配置" tabindex="-1"><a class="header-anchor" href="#_2-慢日志配置" aria-hidden="true">#</a> 2. 慢日志配置</h2><h3 id="_2-1-修改方案1-动态修改-重启后失效" tabindex="-1"><a class="header-anchor" href="#_2-1-修改方案1-动态修改-重启后失效" aria-hidden="true">#</a> 2.1 修改方案1：动态修改（重启后失效）</h3><p>动态修改参数（重启后失效）</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>set @@global.slow_query_log=1; -- 1 开启，0 关闭，重启后失效 
set @@global.long_query_time=3; -- mysql 默认的慢查询时间是 10 秒，另开一个窗口后才会查到最新值 

show variables like &#39;%long_query%&#39;; 
show variables like &#39;%slow_query%&#39;;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-修改-配置文件my-cnf-重启不失效" tabindex="-1"><a class="header-anchor" href="#_2-2-修改-配置文件my-cnf-重启不失效" aria-hidden="true">#</a> 2.2 修改 配置文件my.cnf（重启不失效）</h3><p>默认情况下，MySQL 并没有开启慢日志，可以通过修改 slow_query_log 参数来打开慢日志。与慢日志相关的参数介绍如下：</p><ul><li><strong>slow_query_log</strong>：是否启用慢查询日志，默认为0，可设置为0、1，1表示开启。</li><li><strong>slow_query_log_file</strong>：指定慢查询日志位置及名称，默认值为host_name-slow.log，可指定绝对路径。</li><li><strong>long_query_time</strong>：慢查询执行时间阈值，超过此时间会记录，默认为10，单位为s。</li><li><strong>log_output</strong>：慢查询日志输出目标，默认为file，即输出到文件。</li><li><strong>log_timestamps</strong>：主要是控制 error log、slow log、genera log 日志文件中的显示时区，默认使用UTC时区，建议改为 SYSTEM 系统时区。</li><li><strong>log_queries_not_using_indexes</strong>：是否记录所有未使用索引的查询语句，默认为off。</li><li><strong>min_examined_row_limit</strong>：对于查询扫描行数小于此参数的SQL，将不会记录到慢查询日志中，默认为0。</li><li><strong>log_slow_admin_statements</strong>：慢速管理语句是否写入慢日志中，管理语句包含 alter table、create index 等，默认为 off 即不写入。</li></ul><h4 id="_2-2-1-常用配置" tabindex="-1"><a class="header-anchor" href="#_2-2-1-常用配置" aria-hidden="true">#</a> 2.2.1 常用配置</h4><p>在配置文件中，我们可以设置以下几个慢日志相关参数：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># 慢查询日志相关配置，可根据实际情况修改
vim /etc/my.cnf 
[mysqld] 
slow_query_log = 1
slow_query_log_file = /var/log/mysql/mysql-slow.log
long_query_time = 2
log_timestamps = SYSTEM
log_output = FILE
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-具体案例" tabindex="-1"><a class="header-anchor" href="#_3-具体案例" aria-hidden="true">#</a> 3. 具体案例</h2><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 该条SQL执行时间超过阈值</span>

<span class="token comment"># Time: 2023-05-15T01:30:09.796188Z</span>
<span class="token comment"># User@Host: root[root] @  [117.30.56.143]  Id:   205</span>
<span class="token comment"># Query_time: 2.922847  Lock_time: 0.000003 Rows_sent: 10  Rows_examined: 6009</span>
<span class="token keyword">SET</span> <span class="token keyword">timestamp</span><span class="token operator">=</span><span class="token number">1684114206</span><span class="token punctuation">;</span>
<span class="token comment">/* ApplicationName=IntelliJ IDEA 2022.3.2 */</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> test_table t
                  <span class="token keyword">left</span> <span class="token keyword">join</span> test_table tt <span class="token keyword">on</span> <span class="token number">1</span><span class="token operator">=</span><span class="token number">1</span>

         <span class="token keyword">WHERE</span> t<span class="token punctuation">.</span>name <span class="token operator">LIKE</span> <span class="token string">&#39;%test%&#39;</span> <span class="token operator">AND</span> t<span class="token punctuation">.</span>id <span class="token operator">&gt;</span> <span class="token number">1</span> <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> t<span class="token punctuation">.</span>id <span class="token keyword">DESC</span> <span class="token keyword">LIMIT</span> <span class="token number">10</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果启用了慢速查询日志，并且选择了 FILE 作为输出目标，则写入日志的每个语句都以 # 字符开头。对于每一组慢SQL，第一行记录的是该条 SQL 执行的时刻（如果 log_timestamps 参数为 UTC ，则改时间会显示 UTC 时区时间），第二行记录的是执行该语句的用户和 IP 以及链接 id ，第三行的几个字段解释如下：</p><ul><li><strong>Query_time</strong>: duration 语句执行时间，以秒为单位。</li><li><strong>Lock_time</strong>: duration 获取锁的时间(以秒为单位)。</li><li><strong>Rows_sent</strong>: N 发送给 Client 端的行数。</li><li><strong>Rows_examined</strong>: N 服务器层检查的行数(不计算存储引擎内部的任何处理)。</li></ul><p>下面两行分别是此语句执行时候的时间戳和具体慢 SQL 。</p><blockquote><p>在实际环境下，不建议开启 log_queries_not_using_indexes 参数，此参数打开后可能导致慢日志迅速增长。对于慢日志的筛选与分析，我们可以借助 mysqldumpslow、pt-query-digest 等工具来分析。对于慢日志文件，要定期进行归档处理，比如可以暂时关闭慢日志，然后将旧文件重命名，之后再开启慢日志，这样就会写入新的日志文件中，有效减小日志体积。</p></blockquote><h2 id="_4-mysqldumpslow" tabindex="-1"><a class="header-anchor" href="#_4-mysqldumpslow" aria-hidden="true">#</a> 4. <strong>mysqldumpslow</strong></h2><blockquote><p>mysql8.0 没有找到mysqldumpslow，还未实际操作</p></blockquote>`,28),c={href:"https://link.juejin.cn?target=https%3A%2F%2Fdev.mysql.com%2Fdoc%2Frefman%2F5.7%2Fen%2Fmysqldumpslow.html",target:"_blank",rel:"noopener noreferrer"},u=l(`<p>MySQL 提供了 mysqldumpslow 的工具，在 MySQL 的 bin 目录下。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>mysqldumpslow <span class="token comment">--help</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>例如：查询用时最多的 10 条慢 SQL：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>mysqldumpslow <span class="token operator">-</span>s t <span class="token operator">-</span>t <span class="token number">10</span> <span class="token operator">-</span>g <span class="token string">&#39;select&#39;</span> <span class="token operator">/</span>var<span class="token operator">/</span>lib<span class="token operator">/</span>mysql<span class="token operator">/</span>localhost<span class="token operator">-</span>slow<span class="token punctuation">.</span>log
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20230515095146035.png" alt="image-20230515095146035" tabindex="0" loading="lazy"><figcaption>image-20230515095146035</figcaption></figure><p>Count 代表这个 SQL 执行了多少次；</p><p>Time 代表执行的时间，括号里面是累计时间；</p><p>Lock 表示锁定的时间，括号是累计；</p><p>Rows 表示返回的记录数，括号是累计。</p><p>除了慢查询日志之外，还有一个 SHOW PROFILE 工具可以使用</p><h2 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章" aria-hidden="true">#</a> 参考文章</h2>`,11),m={href:"https://juejin.cn/post/7092722546306449438",target:"_blank",rel:"noopener noreferrer"},g={href:"https://zhuanlan.zhihu.com/p/373155073",target:"_blank",rel:"noopener noreferrer"},h={href:"http://www.datamaker.online/",target:"_blank",rel:"noopener noreferrer"};function _(v,b){const s=r("ExternalLinkIcon");return t(),i("div",null,[p,e("p",null,[e("a",c,[n("官方分析"),a(s)])]),u,e("p",null,[e("a",m,[n("Mysql-如何进行慢SQL查询"),a(s)])]),e("p",null,[e("a",g,[n("MySQL慢日志全解析！"),a(s)])]),e("p",null,[e("a",h,[n("mysql测试数据生成"),a(s)])])])}const y=o(d,[["render",_],["__file","mysql-x-slowlog.html.vue"]]);export{y as default};
