const t=JSON.parse('{"key":"v-fea47b6a","path":"/deploy/mq-rabbitmq/rabbitmq-x-durable.html","title":"RabbitMQ进阶 - 持久化","lang":"zh-CN","frontmatter":{"order":90,"category":["RabbitMQ","MQ"],"description":"1. 简介 持久化在前面多次提到，持久化可以提高 RabbitMQ 的可靠性，防止在异常情况（重启、关闭、宕机等）下的数据丢失。 本节针对这个概念做一个总结。RabbitMQ 的持久化分为三个部分：\\r交换器的持久化; 在声明交换器是将 durable 参数设置为 true 实现，如果不持久化，RabbitMQ 服务重启之后，相关的交换器元数据会丢失（没...","head":[["meta",{"property":"og:url","content":"https://zszdevelop.github.io/java-study-gitbook/deploy/mq-rabbitmq/rabbitmq-x-durable.html"}],["meta",{"property":"og:site_name","content":"布吉岛的知识笔记"}],["meta",{"property":"og:title","content":"RabbitMQ进阶 - 持久化"}],["meta",{"property":"og:description","content":"1. 简介 持久化在前面多次提到，持久化可以提高 RabbitMQ 的可靠性，防止在异常情况（重启、关闭、宕机等）下的数据丢失。 本节针对这个概念做一个总结。RabbitMQ 的持久化分为三个部分：\\r交换器的持久化; 在声明交换器是将 durable 参数设置为 true 实现，如果不持久化，RabbitMQ 服务重启之后，相关的交换器元数据会丢失（没..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-02-20T13:42:31.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2023-02-20T13:42:31.000Z"}]]},"headers":[{"level":2,"title":"1. 简介","slug":"_1-简介","link":"#_1-简介","children":[]},{"level":2,"title":"2. 设置持久化后消息也可能丢失","slug":"_2-设置持久化后消息也可能丢失","link":"#_2-设置持久化后消息也可能丢失","children":[]},{"level":2,"title":"参考文章","slug":"参考文章","link":"#参考文章","children":[]}],"git":{"createdTime":1676900551000,"updatedTime":1676900551000,"contributors":[{"name":"zszdevelop","email":"zszdevelop@163.com","commits":1}]},"readingTime":{"minutes":2.07,"words":621},"filePathRelative":"deploy/mq-rabbitmq/rabbitmq-x-durable.md","localizedDate":"2023年2月20日","autoDesc":true}');export{t as data};
