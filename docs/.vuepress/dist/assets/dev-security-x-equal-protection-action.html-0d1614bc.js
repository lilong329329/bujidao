import{_ as s,W as n,X as i,Z as e,$ as d,a0 as r,Y as t,D as l}from"./framework-4b7e9ff4.js";const o={},c=t(`<h1 id="开发安全-等保测评实战" tabindex="-1"><a class="header-anchor" href="#开发安全-等保测评实战" aria-hidden="true">#</a> 开发安全 - 等保测评实战</h1><h2 id="_1-服务器安全配置" tabindex="-1"><a class="header-anchor" href="#_1-服务器安全配置" aria-hidden="true">#</a> 1. 服务器安全配置</h2><h3 id="_1-1-无密码复杂度和有效期设置" tabindex="-1"><a class="header-anchor" href="#_1-1-无密码复杂度和有效期设置" aria-hidden="true">#</a> 1.1 无密码复杂度和有效期设置</h3><h4 id="_1-1-1-描述" tabindex="-1"><a class="header-anchor" href="#_1-1-1-描述" aria-hidden="true">#</a> 1.1.1 描述</h4><p>应对登录的用户进行身份标识和鉴别，身份标识具有唯一性，身份鉴别信息具有复杂度要求并定期更换；</p><h4 id="_1-1-2-风险值" tabindex="-1"><a class="header-anchor" href="#_1-1-2-风险值" aria-hidden="true">#</a> 1.1.2 风险值</h4><p>高</p><h4 id="_1-1-3-解决步骤1" tabindex="-1"><a class="header-anchor" href="#_1-1-3-解决步骤1" aria-hidden="true">#</a> 1.1.3 解决步骤1</h4><p>建议系统提供专用的登录控制模块对登录用户进行身份标识和鉴别。 参考配置：密码复杂度策略及有效期策略为：</p><p>修改 /etc/login.defs</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>PASS_MAX_DAYS   <span class="token number">90</span>
PASS_MIN_DAYS   <span class="token number">2</span>
PASS_MIN_LEN    <span class="token number">20</span>
PASS_WARN_AGE   <span class="token number">7</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><ul><li><code>PASS_MAX_DAYS 90</code>: 密码有效期为 90 天。超过此期限后，用户必须更改密码才能继续使用系统。</li><li><code>PASS_MIN_DAYS 2</code>: 用户更改密码后，必须等待 2 天才能再次更改密码。</li><li><code>PASS_MIN_LEN 20</code>: 新密码长度必须至少为 20 个字符。</li><li><code>PASS_WARN_AGE 7</code>: 在密码过期之前的 7 天内，系统将开始发送警告消息，提醒用户需要更改密码。</li></ul></blockquote><h4 id="_1-1-4-解决步骤2" tabindex="-1"><a class="header-anchor" href="#_1-1-4-解决步骤2" aria-hidden="true">#</a> 1.1.4 解决步骤2</h4><p>修改：/etc/pam.d/system-auth</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>password    requisite     pam_pwquality.so <span class="token assign-left variable">minlen</span><span class="token operator">=</span><span class="token number">8</span> <span class="token assign-left variable">ucredit</span><span class="token operator">=</span>-1 <span class="token assign-left variable">lcredit</span><span class="token operator">=</span>-1 <span class="token assign-left variable">dcredit</span><span class="token operator">=</span>-1 <span class="token assign-left variable">ocredit</span><span class="token operator">=</span>-1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>PAM（Pluggable Authentication Modules）配置中的条目，用于指定密码策略。具体来说，该条目调用了 <code>pam_pwquality.so</code> 模块，并指定了以下参数：</p><ul><li><code>minlen=8</code>: 密码最小长度为 8 个字符。</li><li><code>ucredit=-1</code>: 密码必须包含至少一个大写字母，否则拒绝密码。</li><li><code>lcredit=-1</code>: 密码必须包含至少一个小写字母，否则拒绝密码。</li><li><code>dcredit=-1</code>: 密码必须包含至少一个数字，否则拒绝密码。</li><li><code>ocredit=-1</code>: 密码必须包含至少一个特殊字符，否则拒绝密码。</li></ul><p>这些参数共同定义了一个相对安全的密码策略，要求密码长度足够长，并包含大小写字母、数字和特殊字符等各种类型的字符。在使用此密码策略进行身份验证时，用户必须遵守这些规则以创建强密码。</p></blockquote><h3 id="_1-2-未设置登录失败处理功能" tabindex="-1"><a class="header-anchor" href="#_1-2-未设置登录失败处理功能" aria-hidden="true">#</a> 1.2 未设置登录失败处理功能</h3><h4 id="_1-2-1-描述" tabindex="-1"><a class="header-anchor" href="#_1-2-1-描述" aria-hidden="true">#</a> 1.2.1 描述</h4><p>应具有登录失败处理功能，应配置并启用结束会话、限制非法登录次数和当登录连接超时自动退出等相关措施；</p><blockquote><p>建议开启失败登录处理功能，如限制非法登录次数、自动退出功能、锁定时间等。</p></blockquote><h4 id="_1-2-2-风险值" tabindex="-1"><a class="header-anchor" href="#_1-2-2-风险值" aria-hidden="true">#</a> 1.2.2 风险值</h4><p>高</p><h4 id="_1-2-3-解决步骤1" tabindex="-1"><a class="header-anchor" href="#_1-2-3-解决步骤1" aria-hidden="true">#</a> 1.2.3 解决步骤1</h4><p>编辑/etc/pam.d/system-auth</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>account required /lib/securtiy/pam_tally2.so <span class="token assign-left variable">deny</span><span class="token operator">=</span><span class="token number">3</span>  <span class="token assign-left variable">unlock_time</span><span class="token operator">=</span><span class="token number">300</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>X为锁定次数，建议小于5；Y为锁定秒数，建议不小于300</p></blockquote><h4 id="_1-2-4-解决步骤2" tabindex="-1"><a class="header-anchor" href="#_1-2-4-解决步骤2" aria-hidden="true">#</a> 1.2.4 解决步骤2</h4><p>远程登录失败处理功能相关参数</p><p>编辑/etc/pam.d/sshd文件中存在</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>auth required pam_tally2.so <span class="token assign-left variable">onerr</span><span class="token operator">=</span>fail <span class="token assign-left variable">deny</span><span class="token operator">=</span><span class="token number">5</span> <span class="token assign-left variable">unlock_time</span><span class="token operator">=</span><span class="token number">300</span> even_deny_root <span class="token assign-left variable">root_unlock_time</span><span class="token operator">=</span><span class="token number">10</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_1-2-5-解决步骤3" tabindex="-1"><a class="header-anchor" href="#_1-2-5-解决步骤3" aria-hidden="true">#</a> 1.2.5 解决步骤3</h4><p>编辑 /etc/profile文件中设置了超时锁定参数，在该文件中设置了</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> <span class="token assign-left variable">TMOUT</span><span class="token operator">=</span><span class="token number">600</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_1-3-本机的日志留存时间不足6个月" tabindex="-1"><a class="header-anchor" href="#_1-3-本机的日志留存时间不足6个月" aria-hidden="true">#</a> 1.3 本机的日志留存时间不足6个月</h3><h4 id="_1-3-1-描述" tabindex="-1"><a class="header-anchor" href="#_1-3-1-描述" aria-hidden="true">#</a> 1.3.1 描述</h4><p>应对审计记录进行保护，定期备份，避免受到未预期的删除、修改或覆盖等</p><h4 id="_1-3-2-风险值" tabindex="-1"><a class="header-anchor" href="#_1-3-2-风险值" aria-hidden="true">#</a> 1.3.2 风险值</h4><p>中</p><h4 id="_1-3-3-解决步骤1" tabindex="-1"><a class="header-anchor" href="#_1-3-3-解决步骤1" aria-hidden="true">#</a> 1.3.3 解决步骤1</h4><p>编辑 /etc/logrotate.conf</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20230612153541057.png" alt="image-20230612153541057" tabindex="0" loading="lazy"><figcaption>image-20230612153541057</figcaption></figure><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>sudo systemctl restart rsyslog
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_1-4-服务器未限制终端登录地址" tabindex="-1"><a class="header-anchor" href="#_1-4-服务器未限制终端登录地址" aria-hidden="true">#</a> 1.4 服务器未限制终端登录地址</h2><h4 id="_1-4-1-描述" tabindex="-1"><a class="header-anchor" href="#_1-4-1-描述" aria-hidden="true">#</a> 1.4.1 描述</h4><p>应通过设定终端接入方式或网络地址范围对通过网络进行管理的管理终端进行限制</p><blockquote><p>建议限制可登录服务器的管理终端地址，仅允许特定的地址登录。</p></blockquote><h4 id="_1-4-2-风险值" tabindex="-1"><a class="header-anchor" href="#_1-4-2-风险值" aria-hidden="true">#</a> 1.4.2 风险值</h4><p>高</p><h4 id="_1-4-3-解决步骤1-限制用户ssh登录" tabindex="-1"><a class="header-anchor" href="#_1-4-3-解决步骤1-限制用户ssh登录" aria-hidden="true">#</a> 1.4.3 解决步骤1：<strong>限制用户SSH登录</strong></h4><p>只允许指定用户进行登录（白名单）：</p><p>在/etc/ssh/sshd_config配置文件中设置AllowUsers选项，（配置完成需要重启 SSHD 服务）格式如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>AllowUsers    aliyun test@192.168.1.1            
# 允许 aliyun 和从 192.168.1.1 登录的 test 帐户通过 SSH 登录系统。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>只拒绝指定用户进行登录（黑名单）：</p><p>在/etc/ssh/sshd_config配置文件中设置DenyUsers选项，（配置完成需要重启SSHD服务）格式如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>DenyUsers    zhangsan aliyun    #Linux系统账户        
# 拒绝 zhangsan、aliyun 帐户通过 SSH 登录系统
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>重启SSH</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>service sshd restart
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_1-4-4-解决步骤2-限制ip-ssh登录" tabindex="-1"><a class="header-anchor" href="#_1-4-4-解决步骤2-限制ip-ssh登录" aria-hidden="true">#</a> 1.4.4 解决步骤2：<strong>限制IP SSH登录</strong></h4><p>**说明：这里的IP是指客户端IP，不是服务器IP，下面的例子使用了hosts.allow文件的配置方式，目的是快，但也有不灵活的，建议改成iptables的方案。 **</p><p>除了可以禁止某个用户登录，我们还可以针对<strong>固定的IP进行禁止登录</strong>，linux 服务器通过设置**/etc/hosts.allow<strong>和</strong>/etc/hosts.deny**这个两个文件，hosts.allow许可大于hosts.deny可以限制或者允许某个或者某段IP地址远程 SSH 登录服务器，方法比较简单，且设置后立即生效，不需要重启SSHD服务，具体如下：</p><p>/etc/hosts.allow添加</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>sshd:192.168.0.1:allow  #允许 192.168.0.1 这个IP地址SSH登录
sshd:192.168.0.:allow #允许192.168.0.1/24这段IP地址的用户登录，多个网段可以以逗号隔开，比如192.168.0.,192.168.1.:allow
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>/etc/hosts.allow添加</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>sshd:ALL #允许全部的ssh登录 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>hosts.allow和hosts.deny两个文件同时设置规则的时候，<strong>hosts.allow文件中的规则优先级高</strong>，按照此方法设置后服务器只允许192.168.0.1这个IP地址的SSH登录，其它的IP都会拒绝。</p><p>/etc/hosts.deny添加</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>sshd:ALL #拒绝全部IP
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章" aria-hidden="true">#</a> 参考文章</h2>`,68),h={href:"https://www.cnblogs.com/EasonJim/p/8334122.html",target:"_blank",rel:"noopener noreferrer"};function p(u,b){const a=l("ExternalLinkIcon");return n(),i("div",null,[c,e("p",null,[e("a",h,[d("Linux限制某些用户或IP登录SSH、允许特定IP登录SSH"),r(a)])])])}const m=s(o,[["render",p],["__file","dev-security-x-equal-protection-action.html.vue"]]);export{m as default};
